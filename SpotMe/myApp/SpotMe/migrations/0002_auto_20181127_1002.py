# Generated by Django 2.1.2 on 2018-11-27 04:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('SpotMe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_time', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('attendance_flag', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2)], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='collaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(max_length=10)),
                ('course_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='course_session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(default='sessn', max_length=10)),
                ('course_session_info', models.CharField(default='', max_length=1000)),
                ('semester', models.CharField(choices=[('FALL', 'Fall'), ('AUTUMN', 'Autumn')], max_length=10)),
                ('year', models.IntegerField(choices=[(2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018)])),
                ('attendance_time', models.IntegerField(default=15)),
                ('course', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SpotMe.course')),
            ],
        ),
        migrations.CreateModel(
            name='lecture',
            fields=[
                ('lecture_id', models.AutoField(primary_key=True, serialize=False)),
                ('lecture_title', models.CharField(default=None, max_length=50, null=True)),
                ('lecture_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('course_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.course_session')),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='router',
            fields=[
                ('BSSID', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('SSID', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='router_location_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_strength', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.location')),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.router')),
            ],
        ),
        migrations.CreateModel(
            name='router_location_statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(default=0)),
                ('avg', models.FloatField(default=0)),
                ('var', models.FloatField(default=0)),
                ('Max', models.FloatField(default=-100000)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.location')),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.router')),
            ],
        ),
        migrations.CreateModel(
            name='takes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SpotMe.course_session')),
            ],
        ),
        migrations.CreateModel(
            name='tracking_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.attendance')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.location')),
            ],
        ),
        migrations.RemoveField(
            model_name='instructor',
            name='name',
        ),
        migrations.RemoveField(
            model_name='student',
            name='name',
        ),
        migrations.AddField(
            model_name='instructor',
            name='profile_pic',
            field=models.FileField(default=None, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='instructor',
            name='user',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='student',
            name='profile_pic',
            field=models.FileField(default=None, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='instructor',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='student',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AddField(
            model_name='takes',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.student'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='lecture_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.location'),
        ),
        migrations.AddField(
            model_name='course_session',
            name='course_instructor',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SpotMe.instructor'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='lecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.lecture'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SpotMe.student'),
        ),
        migrations.AlterUniqueTogether(
            name='takes',
            unique_together={('student', 'course_session')},
        ),
        migrations.AlterUniqueTogether(
            name='router_location_statistic',
            unique_together={('location', 'router')},
        ),
        migrations.AlterUniqueTogether(
            name='router_location_data',
            unique_together={('location', 'router', 'signal_strength')},
        ),
        migrations.AlterUniqueTogether(
            name='course_session',
            unique_together={('session_token', 'course')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'lecture')},
        ),
    ]
